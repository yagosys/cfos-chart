{{- $kind := .Values.deployment.kind | default "DaemonSet" -}}
apiVersion: apps/v1
kind: {{ $kind }}
metadata:
  name: {{ include "cfos.fullname" . }}
  labels:
    {{- include "cfos.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if eq $kind "Deployment" }}
  replicas: {{ .Values.replicaCount }}
  {{- else }}
  updateStrategy:
    type: {{ .Values.updateStrategy | default "RollingUpdate" }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cfos.selectorLabels" . | nindent 6 }}
      {{- with .Values.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "cfos.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.appArmor.enabled }}
        container.apparmor.security.beta.kubernetes.io/{{ .Chart.Name }}: {{ .Values.appArmor.profile }}
        {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- if .Values.initContainers.enabled }}
      initContainers:
      - name: init-myservice
        image: "{{ .Values.initContainers.image.repository }}:{{ .Values.initContainers.image.tag }}"
        imagePullPolicy: {{ .Values.initContainers.image.pullPolicy }}
        command:
        - sh
        - -c
        - |
          echo "nameserver {{ .Values.dnsConfig.nameserver }}" > /mnt/resolv.conf
          echo "search {{ join " " .Values.dnsConfig.searchDomains }}" >> /mnt/resolv.conf;
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        - name: resolv-conf
          mountPath: /mnt
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        ports:
        - containerPort: {{ .Values.service.port }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /data
          name: data-volume
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default "cfosconfigdata" }}
        {{- else }}
        emptyDir: {}
        {{- end }}
        - mountPath: /etc/resolv.conf
          name: resolv-conf
          subPath: resolv.conf
      volumes:
      - name: data-volume
        emptyDir: {}
      - name: resolv-conf
        emptyDir: {}
      dnsPolicy: ClusterFirst
